<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlsx.comzlsx.mapper.ShopMapper">
  <resultMap id="BaseResultMap" type="com.zlsx.comzlsx.domain.Shop">
    <!--@mbg.generated generated on Fri Aug 23 14:04:50 CST 2019.-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="Introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="Latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated generated on Fri Aug 23 14:04:50 CST 2019.-->
    id, `name`, address, phone, images, Introduction, Latitude, longitude, create_time, 
    update_time, deleted
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated generated on Fri Aug 23 14:04:50 CST 2019.-->
    update shop
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.address,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.phone,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="images = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.images,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="Introduction = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.introduction,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="Latitude = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.latitude,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="longitude = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.longitude,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.deleted,jdbcType=BIT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>1
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated generated on Fri Aug 23 14:04:50 CST 2019.-->
    insert into shop
    (`name`, address, phone, images, Introduction, Latitude, longitude, create_time, 
      update_time, deleted)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.name,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, 
        #{item.images,jdbcType=VARCHAR}, #{item.introduction,jdbcType=VARCHAR}, #{item.latitude,jdbcType=VARCHAR}, 
        #{item.longitude,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.deleted,jdbcType=BIT})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.zlsx.comzlsx.domain.Shop" useGeneratedKeys="true">
    <!--@mbg.generated generated on Fri Aug 23 14:04:50 CST 2019.-->
    insert into shop
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `name`,
      address,
      phone,
      images,
      Introduction,
      Latitude,
      longitude,
      create_time,
      update_time,
      deleted,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{name,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR},
      #{images,jdbcType=VARCHAR},
      #{introduction,jdbcType=VARCHAR},
      #{latitude,jdbcType=VARCHAR},
      #{longitude,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{deleted,jdbcType=BIT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      `name` = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      Introduction = #{introduction,jdbcType=VARCHAR},
      Latitude = #{latitude,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.zlsx.comzlsx.domain.Shop" useGeneratedKeys="true">
    <!--@mbg.generated generated on Fri Aug 23 14:04:50 CST 2019.-->
    insert into shop
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="introduction != null">
        Introduction,
      </if>
      <if test="latitude != null">
        Latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="classifyId != null">
        classify_id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="percapita != null">
        percapita,
      </if>
      <if test="rate != null">
        rate,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT}
        ,
      </if>
      <if test="classifyId != null">
      #{classifyId}
      ,
    </if><if test="addressId != null">
      #{addressId}
      ,
    </if><if test="image != null">
      #{image}
      ,
    </if><if test="percapita != null">
      #{percapita}
      ,
    </if><if test="rate != null">
      #{rate},
    </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        Introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        Latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="classifyId != null">
        classify_id = #{classifyId,jdbcType=BIT},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=BIT},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=BIT},
      </if>
      <if test="percapita != null">
        percapita = #{percapita,jdbcType=BIT},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=BIT},
      </if>
    </trim>
  </insert>
    <select id="selectShops" resultType="com.zlsx.comzlsx.dto.response.ShopDto">
      select s.*,
       (select name from classify where id = s.classify_id) as classifyName,
       (select name from address where id = s.address_id)   as addressName ,
      (select count(*) from comment where type ='2' and article_id=s.id)   as commontsNum
        from shop s where 1=1
      <if test="classifyId != null">
      and  classify_id = #{classifyId}
    </if>
      <if test="addressId != null">
        and  address_id = #{addressId}
      </if>
    </select>
    <select id="getArticleListAbout" resultType="com.zlsx.comzlsx.domain.Shop">
      SELECT *
            FROM shop tab
            WHERE id >= (SELECT FLOOR(MAX(id) * RAND()) FROM `shop`)
    </select>
</mapper>